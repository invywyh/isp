
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================
module ISP_DE3(

		////////// CLOCK //////////
		CLK_OUT,
		EXT_CLK,
		OSC1_50,
		OSC2_50,
		OSC_BA,
		OSC_BB,
		OSC_BC,
		OSC_BD,

		////////// LED //////////
		LEDB,
		LEDG,
		LEDR,

		////////// SEG7 //////////
		HEX0,
		HEX0_DP,
		HEX1,
		HEX1_DP,

		////////// BUTTON //////////
		Button,

		////////// SW (SLIDE SWITCH) //////////
		SW,

		////////// DIP_SW (DIP SWITCH) //////////
		DIP_SW,

		////////// MAX1619 (TEMPERATURE SENSOR) //////////
		TEMP_CLK,
		TEMP_DATA,
		TEMP_INTn,

		////////// USB //////////
		OTG_A,
		OTG_CS_n,
		OTG_D,
		OTG_DC_DACK,
		OTG_DC_DREQ,
		OTG_DC_IRQ,
		OTG_HC_DACK,
		OTG_HC_DREQ,
		OTG_HC_IRQ,
		OTG_OE_n,
		OTG_RESET_n,
		OTG_WE_n,

		////////// SDCARD //////////
		SD_CLK,
		SD_CMD,
		SD_DAT,
		SD_WPn,

		////////// GPIO1 (J14, GPIO 1), connect to D5M(D5M Board) //////////
		GPIO1_D,
		GPIO1_FVAL,
		GPIO1_LVAL,
		GPIO1_PIXLCLK,
		GPIO1_RESETn,
		GPIO1_SCLK,
		GPIO1_SDATA,
		GPIO1_STROBE,
		GPIO1_TRIGGER,
		GPIO1_XCLKIN,

		////////// mem (J9, DDR2 SO-DIMM), connect to DDR2_SODIMM(DDR2_SODIMM Board) //////////
		mem_SA,
		mem_SCL,
		mem_SDA,
		mem_addr,
		mem_ba,
		mem_cas_n,
		mem_cke,
		mem_clk,
		mem_clk_n,
		mem_cs_n,
		mem_dm,
		mem_dq,
		mem_dqs,
		mem_dqsn,
		mem_odt,
		mem_ras_n,
		mem_we_n,

		////////// HSTCC (J5 HSTC-C TOP/J6, HSTC-C BOTTOM), connect to DVI(DVI TX/RX Board) //////////
		HSTCC_DVI_RX_CLK,
		HSTCC_DVI_RX_CTL,
		HSTCC_DVI_RX_D,
		HSTCC_DVI_RX_DDCSCL,
		HSTCC_DVI_RX_DDCSDA,
		HSTCC_DVI_RX_DE,
		HSTCC_DVI_RX_HS,
		HSTCC_DVI_RX_SCDT,
		HSTCC_DVI_RX_VS,
		HSTCC_DVI_TX_CLK,
		HSTCC_DVI_TX_CTL,
		HSTCC_DVI_TX_D,
		HSTCC_DVI_TX_DDCSCL,
		HSTCC_DVI_TX_DDCSDA,
		HSTCC_DVI_TX_DE,
		HSTCC_DVI_TX_DKEN,
		HSTCC_DVI_TX_HS,
		HSTCC_DVI_TX_HTPLG,
		HSTCC_DVI_TX_ISEL,
		HSTCC_DVI_TX_MSEN,
		HSTCC_DVI_TX_SCL,
		HSTCC_DVI_TX_SDA,
		HSTCC_DVI_TX_VS,
		HSTCC_EDID_WP,
		HSTCC_HSMC_SCL,
		HSTCC_HSMC_SDA,
		HSTCC_TX_PD_N,

		////////// REGULATOR //////////
		JVC_CLK,
		JVC_CS,
		JVC_DATAIN,
		JVC_DATAOUT

	);

//=======================================================
//  PARAMETER declarations
//=======================================================

//=======================================================
//  PORT declarations
//=======================================================
////////// CLOCK //////////
output                    		CLK_OUT;
input                     		EXT_CLK;
input                     		OSC1_50;
input                     		OSC2_50;
input                     		OSC_BA;
input                     		OSC_BB;
input                     		OSC_BC;
input                     		OSC_BD;

////////// LED //////////
output    	[7:0]           	LEDB;
output    	[7:0]           	LEDG;
output    	[7:0]           	LEDR;

////////// SEG7 //////////
output    	[6:0]           	HEX0;
output                    		HEX0_DP;
output    	[6:0]           	HEX1;
output                    		HEX1_DP;

////////// BUTTON //////////
input     	[3:0]           	Button;

////////// SW (SLIDE SWITCH) //////////
input     	[3:0]           	SW;

////////// DIP_SW (DIP SWITCH) //////////
input     	[7:0]           	DIP_SW;

////////// MAX1619 (TEMPERATURE SENSOR) //////////
output                    		TEMP_CLK;
inout                     		TEMP_DATA;
input                     		TEMP_INTn;

////////// USB //////////
output    	[17:1]          	OTG_A;
output                    		OTG_CS_n;
inout     	[31:0]          	OTG_D;
output                    		OTG_DC_DACK;
input                     		OTG_DC_DREQ;
input                     		OTG_DC_IRQ;
output                    		OTG_HC_DACK;
input                     		OTG_HC_DREQ;
input                     		OTG_HC_IRQ;
output                    		OTG_OE_n;
output                    		OTG_RESET_n;
output                    		OTG_WE_n;

////////// SDCARD //////////
output                    		SD_CLK;
inout                     		SD_CMD;
inout                     		SD_DAT;
input                     		SD_WPn;

////////// GPIO1 (J14, GPIO 1), connect to D5M(D5M Board) //////////
input     	[11:0]          	GPIO1_D;
input                     		GPIO1_FVAL;
input                     		GPIO1_LVAL;
input                     		GPIO1_PIXLCLK;
output                    		GPIO1_RESETn;
output                    		GPIO1_SCLK;
inout                     		GPIO1_SDATA;
input                     		GPIO1_STROBE;
output                    		GPIO1_TRIGGER;
input                     		GPIO1_XCLKIN;

////////// mem (J9, DDR2 SO-DIMM), connect to DDR2_SODIMM(DDR2_SODIMM Board) //////////
output    	[1:0]           	mem_SA;
output                    		mem_SCL;
inout                     		mem_SDA;
output    	[15:0]          	mem_addr;
output    	[2:0]           	mem_ba;
output                    		mem_cas_n;
output    	[1:0]           	mem_cke;
inout     	[1:0]           	mem_clk;
inout     	[1:0]           	mem_clk_n;
output    	[1:0]           	mem_cs_n;
output    	[7:0]           	mem_dm;
inout     	[63:0]          	mem_dq;
inout     	[7:0]           	mem_dqs;
inout     	[7:0]           	mem_dqsn;
output    	[1:0]           	mem_odt;
output                    		mem_ras_n;
output                    		mem_we_n;

////////// HSTCC (J5 HSTC-C TOP/J6, HSTC-C BOTTOM), connect to DVI(DVI TX/RX Board) //////////
input                     		HSTCC_DVI_RX_CLK;
input     	[3:1]           	HSTCC_DVI_RX_CTL;
input     	[23:0]          	HSTCC_DVI_RX_D;
inout                     		HSTCC_DVI_RX_DDCSCL;
inout                     		HSTCC_DVI_RX_DDCSDA;
input                     		HSTCC_DVI_RX_DE;
input                     		HSTCC_DVI_RX_HS;
input                     		HSTCC_DVI_RX_SCDT;
input                     		HSTCC_DVI_RX_VS;
output                    		HSTCC_DVI_TX_CLK;
output    	[3:1]           	HSTCC_DVI_TX_CTL;
output    	[23:0]          	HSTCC_DVI_TX_D;
inout                     		HSTCC_DVI_TX_DDCSCL;
inout                     		HSTCC_DVI_TX_DDCSDA;
output                    		HSTCC_DVI_TX_DE;
output                    		HSTCC_DVI_TX_DKEN;
output                    		HSTCC_DVI_TX_HS;
output                    		HSTCC_DVI_TX_HTPLG;
output                    		HSTCC_DVI_TX_ISEL;
output                    		HSTCC_DVI_TX_MSEN;
output                    		HSTCC_DVI_TX_SCL;
inout                     		HSTCC_DVI_TX_SDA;
output                    		HSTCC_DVI_TX_VS;
output                    		HSTCC_EDID_WP;
output                    		HSTCC_HSMC_SCL;
inout                     		HSTCC_HSMC_SDA;
output                    		HSTCC_TX_PD_N;

////////// REGULATOR //////////
output                    		JVC_CLK;
output                    		JVC_CS;
input                     		JVC_DATAIN;
output                    		JVC_DATAOUT;


//=======================================================
//  REG/WIRE declarations
//=======================================================

//=======================================================
//  IO Group Voltage Configuration (Do not modify it)
//=======================================================
IOV_A3V3_B1V8_C3V3_D3V3 IOV_Instance(
	.iCLK(OSC2_50),
	.iRST_n(1'b1),
	.iENABLE(1'b0),
	.oREADY(),
	.oERR(),
	.oERRCODE(),
	.oJVC_CLK(JVC_CLK),
	.oJVC_CS(JVC_CS),
	.oJVC_DATAOUT(JVC_DATAOUT),
	.iJVC_DATAIN(JVC_DATAIN)
);

//=======================================================
//  Structural coding
//=======================================================


endmodule
